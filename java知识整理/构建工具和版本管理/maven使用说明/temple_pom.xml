<project xmlns="http://maven.apache.org/POM/4.0.0 " xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance "

	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">

	<!--声明项目描述符遵循哪一个POM模型版本。 -->
	<modelVersion>4.0.0</modelVersion>

	<!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 
	如com.mycompany.app生成的相对路径为：/com/mycompany/app -->
	<groupId>asia.banseon</groupId>

	<!--构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个特定的group 
		ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源码，二进制发布和WARs等。 -->
	<artifactId>banseon-maven2</artifactId>

	<!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型,默认为jar -->
	<packaging>jar</packaging>

	<!--snapshot :快照版本
		alpha    :内部版本
		beta     :公测版本
		Release  :稳定版本
		GA       :正式版本 -->
	<version>1.0-SNAPSHOT</version>

	<name>项目的描述名</name>
	<url>项目的地址</url>
	<description>项目描述</description>
	<developers>
		开发人员信息
	</developers>
	<licenses>
		许可证信息
	</licenses>
	
	<!--配置版本信息 -->
	<properties>
		<org.springframework.version>4.3.4.RELEASE</org.springframework.version>
	</properties>

	<!-- 依赖列表 -->
	<dependencies>
		<!-- 依赖项 -->
		<dependency>
			<groupId></groupId>
			<artifactId></artifactId>
			<version></version>
			<type></type>
			<scope>依赖的范围</scope>
			<optional>设置依赖是否可选，默认是false</optional>
			<!-- 排除依赖传递列表 -->
			<exclusions>
				<exclusion></exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<!-- 依赖的管理，一般定义在父模块中，由子模块去继承 -->
	<dependencyManagement>
		<dependencies>
			<dependency></dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 对构建行为提供相应的支持 -->
	<build>
		<!-- 插件列表 -->
		<plugins>
			<plugin>
				<!-- 指定坐标 -->
				<groupId></groupId>
				<artifactId></artifactId>
				<version></version>
			</plugin>
		</plugins>
	</build>

	<!-- 一般在子模块中指定所继承的父模块 -->
	<parent>
		<artifactId />
		<groupId />
		<version />
	</parent>

	<!-- 模块列表 -->
	<modules>
		<module>../</module>
		<module>../</module>
	</modules>

</project>  